### set log levels - for more verbose logging change 'info' to 'debug' ###
#info信息将影响输出到Console, MAIL相关配置
log4j.rootLogger=info,payInfo,payError,Console,MAIL

###编码格式
log4j.appender.logfile.encoding=UTF-8

### Console
log4j.appender.Console = org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout = org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}:%p %t %c - %m%n

###dailyfile 1天1个文件
log4j.appender.payInfo = org.apache.log4j.DailyRollingFileAppender
log4j.appender.payInfo.layout = org.apache.log4j.PatternLayout
log4j.appender.payInfo.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}:%p %t %c - %m%n
log4j.appender.payInfo.File=/log/resin/ftpay/payInfo.log
log4j.appender.payInfo.DatePattern='.'yyyy-MM-dd
log4j.appender.payInfo.Threshold = INFO

###dailyfile 1天1个文件
#log4j.logger.payError = ERROR,payError
log4j.appender.payError = org.apache.log4j.DailyRollingFileAppender
log4j.appender.payError.layout = org.apache.log4j.PatternLayout
log4j.appender.payError.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}:%p %t %c - %m%n
log4j.appender.payError.File=/log/resin/ftpay/payError.log
log4j.appender.payError.DatePattern='.'yyyy-MM-dd
log4j.appender.payError.Threshold = ERROR
#log4j.additivity.payError = true


log4j.logger.cusAccess = ERROR,cusAccess
log4j.appender.cusAccess = org.apache.log4j.DailyRollingFileAppender
log4j.appender.cusAccess.layout = org.apache.log4j.PatternLayout
log4j.appender.cusAccess.layout.ConversionPattern = %d{HH:mm:ss}: %m%n
log4j.appender.cusAccess.File=/log/resin/ftpay/cusAccess.log
log4j.appender.cusAccess.Threshold = ERROR
log4j.additivity.cusAccess = false

#ibatis logger config
#log4j.logger.java.sql=debug
#log4j.logger.org.apache.ibatis=debug
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
#log4j.logger.java.sql.Connection=debug
#log4j.logger.java.sql.Statement=debug
#log4j.logger.java.sql.PreparedStatement=debug,Console


## MAIL
log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender
# 日志的错误级别
log4j.appender.MAIL.Threshold=FALT
# 缓存文件大小，日志达到1K时发送Email   可以自定义缓存文件的大小
log4j.appender.MAIL.BufferSize=10
# 发送邮件的服务器
#log4j.appender.MAIL.SMTPHost=X.X.X.X(实际SMTP服务器IP或主机名)
log4j.appender.MAIL.SMTPHost=smtp.163.com
# 邮件的标题
log4j.appender.MAIL.Subject=FTPAY_Error_Message
# 发件人地址
log4j.appender.MAIL.From=mc_bug_report@163.com
# 日志邮件的接收者
log4j.appender.MAIL.To=mengchao@fantingame.com
# 日志PatternLayout
log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout
#debugmoshi 开启
log4j.appender.MAIL.SMTPDebug=false
# 日志的格式
log4j.appender.MAIL.layout.ConversionPattern=[Message] %d - %c -%-4r [%t] %-5p %c %x - %m%n

#以上内容为必须的。
#如果SMTP服务器需要验证的话，可以添加SMTP服务器用户名和密码，但是以下两项不是所有的LOG4J版本都支持。
#需要自己提前确认清楚的。

# SMTP用户名
log4j.appender.MAIL.SMTPUsername=mc_bug_report@163.com
# SMTP密码
log4j.appender.MAIL.SMTPPassword=252493618


#输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL


#其中，Log4j提供的appender有以下几种：
#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）


#DailyRollingFileAppender   
#DatePattern='.'yyyy-ww:每周滚动一次文件，即每周产生一个新的文件。当然也可以指定按月、周、天、时和分。即对应的格式如下：   
#1)'.'yyyy-MM:   每月   
#2)'.'yyyy-ww:   每周   
#3)'.'yyyy-MM-dd:   每天   
#4)'.'yyyy-MM-dd-a:   每天两次   
#5)'.'yyyy-MM-dd-HH:   每小时   
#6)'.'yyyy-MM-dd-HH-mm:   每分钟
